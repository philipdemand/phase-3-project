{"ast":null,"code":"var _jsxFileName = \"/Users/philipdemand/Desktop/phase-3-project/my-app-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      await Promise.all([fetch('http://localhost:9292/tasks'), fetch('http://localhost:9292/categories')]).then(([resTasks, resCategories]) => Promise.all([resTasks.json(), resCategories.json()])).then(([dataTasks, dataCategories]) => {\n        setTasks(dataTasks);\n        setCategories(dataCategories);\n      });\n      getData();\n    }\n  }, []);\n  function handleDarkModeClick() {\n    setIsDarkMode(isDarkMode => !isDarkMode);\n  }\n  const handleSubmit = newItem => {\n    setTasks([...tasks, newItem]);\n  };\n  const removeTask = taskId => {\n    const filteredTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(filteredTasks);\n  };\n\n  // const updateCompletedStatus = (object) => {\n  //   const updatedTasks = tasks.map(task => {\n  //     if (task.id === object.id) {\n  //       return object\n  //     } else {\n  //       return task\n  //     }\n  //   })\n  //   setTasks(updatedTasks)\n  // }\n\n  const addCategory = item => {\n    setCategories([...categories, item]);\n  };\n  const editTaskWords = changedObject => {\n    const updatedName = tasks.map(task => {\n      if (task.id === changedObject.id) {\n        return changedObject;\n      } else {\n        return task;\n      }\n    });\n    setTasks(updatedName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App \" + (isDarkMode ? \"dark\" : \"light\"),\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      onDarkModeClick: handleDarkModeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), categories.length && /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: tasks,\n      categories: categories,\n      editTaskWords: editTaskWords,\n      addCategory: addCategory,\n      removeTask: removeTask,\n      onItemFormSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w2WWr8zs/ixfR/TK7WFgxkRBE8c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ToDoList","Header","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","tasks","setTasks","categories","setCategories","getData","Promise","all","fetch","then","resTasks","resCategories","json","dataTasks","dataCategories","handleDarkModeClick","handleSubmit","newItem","removeTask","taskId","filteredTasks","filter","task","id","addCategory","item","editTaskWords","changedObject","updatedName","map","className","children","onDarkModeClick","fileName","_jsxFileName","lineNumber","columnNumber","length","onItemFormSubmit","_c","$RefreshReg$"],"sources":["/Users/philipdemand/Desktop/phase-3-project/my-app-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport Header from \"./Header\";\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [tasks, setTasks] = useState([])\n  const [categories, setCategories] = useState([])\n\n  useEffect(() => { \n    async function getData () {\n      await Promise.all([\n        fetch('http://localhost:9292/tasks'),\n        fetch('http://localhost:9292/categories'),\n      ])\n        .then(([resTasks, resCategories]) => \n          Promise.all([resTasks.json(), resCategories.json()])\n        )\n        .then(([dataTasks, dataCategories]) => {\n          setTasks(dataTasks);\n          setCategories(dataCategories);\n        });\n        getData()\n    }\n  }, []);\n\n  function handleDarkModeClick() {\n    setIsDarkMode((isDarkMode) => !isDarkMode);\n  }\n\n  const handleSubmit = (newItem) => {\n    setTasks([...tasks, newItem])\n  }\n\n  const removeTask = (taskId) => {\n    const filteredTasks = tasks.filter(task => task.id !== taskId)\n    setTasks(filteredTasks)\n  }\n\n  // const updateCompletedStatus = (object) => {\n  //   const updatedTasks = tasks.map(task => {\n  //     if (task.id === object.id) {\n  //       return object\n  //     } else {\n  //       return task\n  //     }\n  //   })\n  //   setTasks(updatedTasks)\n  // }\n\n  const addCategory = (item) => {\n    setCategories([...categories, item])\n  }\n\n  const editTaskWords = (changedObject) => {\n    const updatedName = tasks.map(task => {\n      if (task.id === changedObject.id) {\n        return changedObject\n      } else {\n        return task\n      }\n    })\n    setTasks(updatedName)\n  }\n\n  return (\n    <div className={\"App \" + (isDarkMode ? \"dark\" : \"light\")}>\n      <Header \n        isDarkMode={isDarkMode} \n        onDarkModeClick={handleDarkModeClick} />\n      {categories.length && <ToDoList \n        tasks={tasks}\n        categories={categories}\n        editTaskWords={editTaskWords} \n        addCategory={addCategory} \n        removeTask={removeTask} \n        onItemFormSubmit={handleSubmit} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,eAAea,OAAOA,CAAA,EAAI;MACxB,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChBC,KAAK,CAAC,6BAA6B,CAAC,EACpCA,KAAK,CAAC,kCAAkC,CAAC,CAC1C,CAAC,CACCC,IAAI,CAAC,CAAC,CAACC,QAAQ,EAAEC,aAAa,CAAC,KAC9BL,OAAO,CAACC,GAAG,CAAC,CAACG,QAAQ,CAACE,IAAI,CAAC,CAAC,EAAED,aAAa,CAACC,IAAI,CAAC,CAAC,CAAC,CACrD,CAAC,CACAH,IAAI,CAAC,CAAC,CAACI,SAAS,EAAEC,cAAc,CAAC,KAAK;QACrCZ,QAAQ,CAACW,SAAS,CAAC;QACnBT,aAAa,CAACU,cAAc,CAAC;MAC/B,CAAC,CAAC;MACFT,OAAO,CAAC,CAAC;IACb;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,SAASU,mBAAmBA,CAAA,EAAG;IAC7Bf,aAAa,CAAED,UAAU,IAAK,CAACA,UAAU,CAAC;EAC5C;EAEA,MAAMiB,YAAY,GAAIC,OAAO,IAAK;IAChCf,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEgB,OAAO,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMC,aAAa,GAAGnB,KAAK,CAACoB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAAC;IAC9DjB,QAAQ,CAACkB,aAAa,CAAC;EACzB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMI,WAAW,GAAIC,IAAI,IAAK;IAC5BrB,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEsB,IAAI,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,aAAa,GAAIC,aAAa,IAAK;IACvC,MAAMC,WAAW,GAAG3B,KAAK,CAAC4B,GAAG,CAACP,IAAI,IAAI;MACpC,IAAIA,IAAI,CAACC,EAAE,KAAKI,aAAa,CAACJ,EAAE,EAAE;QAChC,OAAOI,aAAa;MACtB,CAAC,MAAM;QACL,OAAOL,IAAI;MACb;IACF,CAAC,CAAC;IACFpB,QAAQ,CAAC0B,WAAW,CAAC;EACvB,CAAC;EAED,oBACEhC,OAAA;IAAKkC,SAAS,EAAE,MAAM,IAAI/B,UAAU,GAAG,MAAM,GAAG,OAAO,CAAE;IAAAgC,QAAA,gBACvDnC,OAAA,CAACF,MAAM;MACLK,UAAU,EAAEA,UAAW;MACvBiC,eAAe,EAAEjB;IAAoB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzCjC,UAAU,CAACkC,MAAM,iBAAIzC,OAAA,CAACH,QAAQ;MAC7BQ,KAAK,EAAEA,KAAM;MACbE,UAAU,EAAEA,UAAW;MACvBuB,aAAa,EAAEA,aAAc;MAC7BF,WAAW,EAAEA,WAAY;MACzBN,UAAU,EAAEA,UAAW;MACvBoB,gBAAgB,EAAEtB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACtC,EAAA,CA3EQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA6EZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}